{"version":3,"sources":["transition/pop.module.css","components/ContactItem/ContactItem.module.css","components/ContactFrom/ContactFrom.module.css","components/App/App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","services/helpers.js","components/ContactFrom/ContactFrom.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","name","shortid","generate","number","filter","ContactFrom","state","handleChange","e","target","value","setState","reset","preventDefault","length","props","handleSubmit","confirmAlert","message","buttons","label","this","className","Styles","addContact","onSubmit","input","htmlFor","inputId","autoComplete","pattern","type","onChange","id","widthInput","widthBtn","Component","ContactItem","item","onClickDelete","onClick","btnDelete","ContactList","filterContacts","TransitionGroup","component","list","map","CSSTransition","in","key","classNames","Pop","timeout","Filter","unmountOnExit","findContact","App","contacts","elements","itemContact","defaultValue","find","deleteContact","toLowerCase","includes","local","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","appear","allTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edd915b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__2o-3r\",\"enterActive\":\"pop_enterActive__21AXF\",\"exit\":\"pop_exit__1k8As\",\"exitActive\":\"pop_exitActive__MO-E_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3cxAy\",\"btnDelete\":\"ContactItem_btnDelete__1Ok5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContact\":\"ContactFrom_addContact__3AygE\",\"input\":\"ContactFrom_input__30MbL\",\"widthInput\":\"ContactFrom_widthInput__3Gt90\",\"widthBtn\":\"ContactFrom_widthBtn__32qrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTitle\":\"App_allTitle__9MV1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Bf4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContact\":\"Filter_findContact__3u0da\"};","import shortid from 'shortid';\n\nexport default {\n  name: shortid.generate(),\n  number: shortid.generate(),\n  filter: shortid.generate(),\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { confirmAlert } from 'react-confirm-alert';\nimport Styles from './ContactFrom.module.css';\nimport inputId from '../../services/helpers';\n\nexport default class ContactFrom extends Component {\n  state = { name: '', number: '' };\n\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  reset = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    if (name.length >= 3 && number.length === 10) {\n      this.props.handleSubmit(e);\n    } else {\n      confirmAlert({\n        message:\n          'Заполните форму по шлаблону, name oт 3 символов, номер 10 символов!',\n        buttons: [\n          {\n            label: 'Yes',\n          },\n        ],\n      });\n      return;\n    }\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={Styles.addContact} onSubmit={this.reset}>\n        <label className={Styles.input} htmlFor={inputId.name}>\n          Name\n          <input\n            autoComplete=\"off\"\n            pattern=\"[A-Za-zА-Яа-яЁё]{3,20}\"\n            type=\"text\"\n            value={name}\n            onChange={this.handleChange}\n            id={inputId.name}\n            name=\"name\"\n            className={Styles.widthInput}\n          />\n        </label>\n        <label className={Styles.input} htmlFor={inputId.number}>\n          Number\n          <input\n            autoComplete=\"off\"\n            pattern=\"[0-9]{10}\"\n            type=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            id={inputId.number}\n            name=\"number\"\n            className={Styles.widthInput}\n          />\n        </label>\n        <button type=\"submit\" className={Styles.widthBtn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './ContactItem.module.css';\n\nconst ContactItem = ({ item, onClickDelete }) => {\n  return (\n    <li className={Styles.item}>\n      <h3>{item.name}:</h3>\n      <h3>{item.number} </h3>\n      <button\n        type=\"button\"\n        id={item.id}\n        onClick={onClickDelete}\n        className={Styles.btnDelete}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  onClickDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from '../ContactItem/ContactItem';\nimport Styles from './ContactList.module.css';\nimport Pop from '../../transition/pop.module.css';\n\nconst ContactList = ({ filterContacts, onClickDelete }) => {\n  return (\n    <TransitionGroup component={null}>\n      <ul className={Styles.list}>\n        {filterContacts().map(item => {\n          return (\n            <CSSTransition in key={item.id} classNames={Pop} timeout={250}>\n              <ContactItem item={item} onClickDelete={onClickDelete} />\n            </CSSTransition>\n          );\n        })}\n      </ul>\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  filterContacts: PropTypes.func.isRequired,\n  onClickDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Styles from './Filter.module.css';\nimport inputId from '../../services/helpers';\nimport Pop from '../../transition/pop.module.css';\n\nconst Filter = ({ length, filter, handleChange }) => {\n  return (\n    <>\n      {length > 1 && (\n        <CSSTransition in timeout={250} unmountOnExit classNames={Pop}>\n          <label className={Styles.findContact} htmlFor={inputId.filter}>\n            Find contacts by name\n            <input\n              type=\"text\"\n              id={inputId.filter}\n              value={filter}\n              onChange={handleChange}\n              name=\"filter\"\n            />\n          </label>\n        </CSSTransition>\n      )}\n    </>\n  );\n};\nFilter.propTypes = {\n  length: PropTypes.number.isRequired,\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { confirmAlert } from 'react-confirm-alert';\nimport ContactForm from '../ContactFrom/ContactFrom';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport Styles from './App.module.css';\nimport '../../transition/icon-appear.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const local = localStorage.getItem('contacts');\n    if (local !== null) {\n      this.setState({ contacts: JSON.parse(local) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = e.target.elements;\n    const { contacts } = this.state;\n    const itemContact = {\n      id: shortid.generate(),\n      name: name.defaultValue,\n      number: number.defaultValue,\n    };\n    if (contacts.find(item => item.name === name.defaultValue)) {\n      confirmAlert({\n        message: `${name.defaultValue} is allready in contacts. `,\n        buttons: [\n          {\n            label: 'Yes',\n          },\n        ],\n      });\n    } else {\n      this.setState({ contacts: [...contacts, itemContact] });\n    }\n  };\n\n  deleteContact = e => {\n    const { id } = e.target;\n    const { contacts } = this.state;\n    const filter = contacts.filter(item => item.id !== id);\n    this.setState({ contacts: filter });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <TransitionGroup component={null}>\n        <CSSTransition in timeout={500} unmountOnExit classNames=\"logo\" appear>\n          <h3 className={Styles.allTitle}>Phonebook</h3>\n        </CSSTransition>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        <h3 className={Styles.allTitle}>Contacts</h3>\n        <Filter\n          length={contacts.length}\n          filter={filter}\n          handleChange={this.handleChange}\n        />\n        <ContactList\n          filterContacts={this.filterContacts}\n          onClickDelete={this.deleteContact}\n        />\n      </TransitionGroup>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}