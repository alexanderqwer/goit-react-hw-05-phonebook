{"version":3,"sources":["transition/pop.module.css","components/ContactItem/ContactItem.module.css","components/App/App.module.css","components/ContactFrom/ContactFrom.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","services/helpers.js","services/notification.js","components/ContactFrom/ContactFrom.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","ids","name","shortid","generate","number","filter","notificationAlert","message","confirmAlert","buttons","label","ContactFrom","state","handleChange","e","target","value","setState","reset","preventDefault","length","props","handleSubmit","notification","this","className","Styles","addContact","onSubmit","input","htmlFor","helpers","autoComplete","pattern","type","onChange","id","widthInput","widthBtn","Component","ContactItem","item","onClickDelete","onClick","btnDelete","ContactList","filterContacts","list","map","CSSTransition","in","key","classNames","Pop","timeout","Filter","unmountOnExit","findContact","App","contacts","elements","doesExistName","find","defaultValue","itemContact","deleteContact","toLowerCase","includes","locaContacts","JSON","parse","localStorage","getItem","prevProps","prevState","array","setItem","stringify","TransitionGroup","component","appear","allTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f81ce2a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__2o-3r\",\"enterActive\":\"pop_enterActive__21AXF\",\"exit\":\"pop_exit__1k8As\",\"exitActive\":\"pop_exitActive__MO-E_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3cxAy\",\"btnDelete\":\"ContactItem_btnDelete__1Ok5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allTitle\":\"App_allTitle__9MV1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContact\":\"ContactFrom_addContact__3AygE\",\"input\":\"ContactFrom_input__30MbL\",\"widthInput\":\"ContactFrom_widthInput__3Gt90\",\"widthBtn\":\"ContactFrom_widthBtn__32qrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Bf4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContact\":\"Filter_findContact__3u0da\"};","import shortid from 'shortid';\n\nexport const ids = {\n  name: shortid.generate(),\n  number: shortid.generate(),\n  filter: shortid.generate(),\n};\n\nexport const getLocal = key => JSON.parse(localStorage.getItem(key));\n\nexport const setLocal = (key, array) =>\n  localStorage.setItem(key, JSON.stringify(array));\n","import { confirmAlert } from 'react-confirm-alert';\n\nconst notificationAlert = message => {\n  confirmAlert({\n    message,\n    buttons: [\n      {\n        label: 'Yes',\n      },\n    ],\n  });\n};\n\nexport default notificationAlert;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './ContactFrom.module.css';\nimport * as helpers from '../../services/helpers';\nimport notification from '../../services/notification';\n\nexport default class ContactFrom extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { name: '', number: '' };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  reset = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    const verification = name.length >= 3 && number.length === 10;\n    if (verification) {\n      this.props.handleSubmit(e);\n    } else {\n      const message =\n        'Заполните форму по шлаблону, name oт 3 символов, номер 10 символов!';\n      notification(message);\n      return;\n    }\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={Styles.addContact} onSubmit={this.reset}>\n        <label className={Styles.input} htmlFor={helpers.ids.name}>\n          Name\n          <input\n            autoComplete=\"off\"\n            pattern=\"[A-Za-zА-Яа-яЁё]{3,20}\"\n            type=\"text\"\n            value={name}\n            onChange={this.handleChange}\n            id={helpers.ids.name}\n            name=\"name\"\n            className={Styles.widthInput}\n          />\n        </label>\n        <label className={Styles.input} htmlFor={helpers.ids.number}>\n          Number\n          <input\n            autoComplete=\"off\"\n            pattern=\"[0-9]{10}\"\n            type=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            id={helpers.ids.number}\n            name=\"number\"\n            className={Styles.widthInput}\n          />\n        </label>\n        <button type=\"submit\" className={Styles.widthBtn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './ContactItem.module.css';\n\nconst ContactItem = ({ item, onClickDelete }) => {\n  return (\n    <li className={Styles.item}>\n      <h3>{item.name}:</h3>\n      <h3>{item.number} </h3>\n      <button\n        type=\"button\"\n        id={item.id}\n        onClick={onClickDelete}\n        className={Styles.btnDelete}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  onClickDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactItem from '../ContactItem/ContactItem';\nimport Styles from './ContactList.module.css';\nimport Pop from '../../transition/pop.module.css';\n\nconst ContactList = ({ filterContacts, onClickDelete }) => {\n  return (\n    <ul className={Styles.list}>\n      {filterContacts().map(item => {\n        return (\n          <CSSTransition in key={item.id} classNames={Pop} timeout={250}>\n            <ContactItem item={item} onClickDelete={onClickDelete} />\n          </CSSTransition>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filterContacts: PropTypes.func.isRequired,\n  onClickDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Styles from './Filter.module.css';\nimport * as helpers from '../../services/helpers';\nimport Pop from '../../transition/pop.module.css';\n\nconst Filter = ({ length, filter, handleChange }) => {\n  return (\n    <>\n      {length > 1 && (\n        <CSSTransition in timeout={250} unmountOnExit classNames={Pop}>\n          <label className={Styles.findContact} htmlFor={helpers.ids.filter}>\n            Find contacts by name\n            <input\n              type=\"text\"\n              id={helpers.ids.filter}\n              value={filter}\n              onChange={handleChange}\n              name=\"filter\"\n            />\n          </label>\n        </CSSTransition>\n      )}\n    </>\n  );\n};\nFilter.propTypes = {\n  length: PropTypes.number.isRequired,\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactForm from '../ContactFrom/ContactFrom';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport Styles from './App.module.css';\nimport '../../transition/icon-appear.css';\nimport * as helpers from '../../services/helpers';\nimport notification from '../../services/notification';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const locaContacts = helpers.getLocal('contacts');\n    if (locaContacts !== null) {\n      this.setState({ contacts: locaContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      helpers.setLocal('contacts', contacts);\n    }\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = e.target.elements;\n    const { contacts } = this.state;\n    const doesExistName = contacts.find(\n      item => item.name === name.defaultValue,\n    );\n    const message = `${name.defaultValue} is allready in contacts. `;\n    const itemContact = {\n      id: shortid.generate(),\n      name: name.defaultValue,\n      number: number.defaultValue,\n    };\n    if (doesExistName) {\n      notification(message);\n    } else {\n      this.setState({ contacts: [...contacts, itemContact] });\n    }\n  };\n\n  deleteContact = e => {\n    const { id } = e.target;\n    const { contacts } = this.state;\n    const filter = contacts.filter(item => item.id !== id);\n    this.setState({ contacts: filter });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <TransitionGroup component={null}>\n        <CSSTransition in timeout={500} unmountOnExit classNames=\"logo\" appear>\n          <h3 className={Styles.allTitle}>Phonebook</h3>\n        </CSSTransition>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        {contacts.length > 0 ? (\n          <>\n            <h3 className={Styles.allTitle}>Contacts</h3>\n            <Filter\n              length={contacts.length}\n              filter={filter}\n              handleChange={this.handleChange}\n            />\n            <ContactList\n              filterContacts={this.filterContacts}\n              onClickDelete={this.deleteContact}\n            />\n          </>\n        ) : (\n          <></>\n        )}\n      </TransitionGroup>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}